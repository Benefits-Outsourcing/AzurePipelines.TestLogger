trigger:
  branches:
    include:
      - develop

pr:
  branches:
    include:
      - develop

jobs:
- job: BuildAndPublish
  displayName: 'Build and Publish NuGet Package'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.0.x'
    displayName: 'Setup .NET'

  - script: dotnet restore
    displayName: 'Restore dependencies'

  - script: dotnet publish -c Release
    displayName: 'Build'


  # - script: pwd
  #   displayName: 'Show working directory'

  # - script: ls -R ./src/AzurePipelines.TestLogger/bin/Release/net8.0
  #   displayName: 'List contents of build output directory (TestLogger)'

  # - script: ls -R ./src/CompleteTestRun/bin/Release/net8.0
  #   displayName: 'List contents of build output directory (CompleteTestRun)'

  # - script: ls -R ./src/CreateTestRun/bin/Release/net8.0
  #   displayName: 'List contents of build output directory (CreateTestRun)'

  - script: |
      VERSION=$(date +%Y.%m.%d).$(Build.BuildId)
      echo "##vso[task.setvariable variable=PACKAGE_VERSION]$VERSION"
    displayName: 'Generate package version based on date'

  - script: nuget pack .nuspec -OutputDirectory ./nupkg -Version $(PACKAGE_VERSION)
    displayName: 'Pack NuGet package: AzurePipelines.TestLogger'

  - script: dotnet pack ./src/AzurePipelines.AdoTools/AzurePipelines.AdoTools.csproj -c Release -o ./nupkg /p:PackageVersion=$(PACKAGE_VERSION)
    displayName: 'Pack NuGet package: AzurePipelines.AdoTools'
    
  # - script: ls -R ./nupkg
  #   displayName: 'List contents of nupkg directory'
        
  # - script: sudo apt-get install -y tree
  #   displayName: 'Install tree'

  # - script: tree -d
  #   displayName: 'List directory structure'

  # - task: PublishPipelineArtifact@1
  #   inputs:
  #     targetPath: '$(Build.SourcesDirectory)/nupkg'
  #     artifact: 'nuget-package'
  #   displayName: 'Upload NuGet package artifact'

  - task: NuGetAuthenticate@1
    displayName: 'Authenticate with NuGet' 
  
  - script: dotnet nuget push ./nupkg/*.nupkg --source "https://pkgs.dev.azure.com/wtw-bda-outsourcing-product/BenefitConnect/_packaging/TestAutomation/nuget/v3/index.json" --api-key VSTS
    displayName: 'Publish NuGet package'